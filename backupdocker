# Use the official Ubuntu 22.04 image as a base
FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC

# Update and install necessary tools
RUN apt-get update && apt-get install -y \
    curl \
    gnupg \
    lsb-release \
    tzdata \
    apt-transport-https \
    ca-certificates \
    software-properties-common \
    sudo \
    x11-apps \
    x11vnc \
    xvfb \
    xfce4 \
    mesa-utils \
    libgl1-mesa-glx \
    alsa-utils \
    pulseaudio \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Add ROS 2 GPG key
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -

# Add the ROS 2 repository to your sources list
RUN echo "deb http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

# Update apt repository caches and install ROS 2 packages
RUN apt-get update && apt-get install -y \
    ros-humble-desktop \
    ros-humble-rmw-cyclonedds-cpp \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-vcstool \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install colcon
RUN python3 -m pip install -U colcon-common-extensions

# Source the ROS 2 setup script
RUN echo "source /opt/ros/humble/setup.bash" >> /etc/skel/.bashrc
RUN echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc

# Initialize rosdep
RUN rosdep init && rosdep update

# Add Gazebo GPG key
RUN curl -sSL http://packages.osrfoundation.org/gazebo.key | apt-key add -

# Add the Gazebo repository to your sources list
RUN echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null

# Update apt repository caches and install Gazebo
RUN apt-get update && apt-get install -y \
    gazebo \
    ros-humble-gazebo-ros-pkgs \
    && rm -rf /var/lib/apt/lists/*

# Install Universal Robots ROS 2 packages
RUN apt-get update && apt-get install -y \
    ros-humble-ros2-control \
    ros-humble-gazebo-ros2-control \
    ros-humble-ros2-controllers \
    ros-humble-ur-description \
    && rm -rf /var/lib/apt/lists/*

# add a new user


# Create a ROS 2 workspace
RUN mkdir -p /home/dissertation/UR3/ros2_ws/src

# Clone the necessary repositories
WORKDIR /home/dissertation/UR3/ros2_ws/src
RUN git clone -b humble https://github.com/UniversalRobots/Universal_Robots_ROS2_Driver.git
RUN git clone -b humble https://github.com/UniversalRobots/Universal_Robots_ROS2_Description.git
RUN git clone -b humble https://github.com/UniversalRobots/Universal_Robots_Client_Library.git

# Remove problematic packages
RUN rm -rf Universal_Robots_ROS2_Driver/ur_dashboard_msgs Universal_Robots_ROS2_Driver/ur_controllers

# Install dependencies and build the workspace
WORKDIR /home/dissertation/UR3/ros2_ws
RUN apt-get update && rosdep update && rosdep install --from-paths src --ignore-src -r -y

# Source the ROS 2 setup script and build the workspace
RUN /bin/bash -c "source /opt/ros/humble/setup.bash && colcon build --event-handlers console_cohesion+ --event-handlers console_direct+"

# Source the workspace setup script
RUN echo "source /home/dissertation/UR3/ros2_ws/install/setup.bash" >> /etc/skel/.bashrc

# Create the UR3 launch directory and copy the launch file into the container
RUN mkdir -p /home/dissertation/UR3/launch
COPY ur3_bringup.launch.py /home/dissertation/UR3/launch/

# Create a directory for VNC password
RUN mkdir -p /home/dissertation/.vnc

# Create a script to start VNC server
RUN echo "#!/bin/bash" > /home/dissertation/start_vnc.sh
RUN echo "x11vnc -storepasswd dissertation /home/dissertation/.vnc/passwd" >> /home/dissertation/start_vnc.sh
RUN echo "x11vnc -forever -usepw -create" >> /home/dissertation/start_vnc.sh
RUN chmod +x /home/dissertation/start_vnc.sh

# Copy the container menu script into the container
COPY container_menu.sh /home/dissertation/UR3/container_menu.sh
RUN chmod +x /home/dissertation/UR3/container_menu.sh

# Create a new user and set ownership
RUN useradd -m dissertation
RUN chown -R dissertation:dissertation /home/dissertation

# Set the entrypoint
ENTRYPOINT ["/home/dissertation/UR3/container_menu.sh"]

# Set the default user
USER dissertation
WORKDIR /home/dissertation
