FROM ros:rolling-ros-core-jammy

# setup environment
ENV LANG C.UTF-8

# install packages
RUN apt-get update && apt-get install -q -y --no-install-recommends \
    dirmngr \
    gnupg2 \
    git \
    && rm -rf /var/lib/apt/lists/*

# # setup keys
# RUN set -eux; \
#     key='D2486D2DD83DB69272AFE98867170598AF249743'; \
#     export GNUPGHOME="$(mktemp -d)"; \
#     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key"; \
#     mkdir -p /usr/share/keyrings; \
#     gpg --batch --export "$key" > /usr/share/keyrings/gazebo-latest-archive-keyring.gpg; \
#     gpgconf --kill all; \
#     rm -rf "$GNUPGHOME"

# # setup sources.list
# RUN echo "deb [ signed-by=/usr/share/keyrings/gazebo-latest-archive-keyring.gpg ] http://packages.osrfoundation.org/gazebo/ubuntu-stable jammy main" > /etc/apt/sources.list.d/gazebo-stable.list


# Install gazebo_ros package
RUN apt-get update && apt-get install -y \
    ros-${ROS_DISTRO}-gazebo-ros-pkgs \
    && rm -rf /var/lib/apt/lists/*

# install ur_robot_driver
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-rolling-ur \
    ros-rolling-ros2-control \
    ros-rolling-ros2-controllers \
    gz_ros2_control \
    ros-rolling-ros2-ur-client-library \
    && rm -rf /var/lib/apt/lists/*

# finish setup
RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> ~/.bashrc

# Create a colcon workspace:
ENV COLCON_WS=/root/workspaces/ur_gazebo
RUN mkdir -p $COLCON_WS/src

# Install all the dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-vcstool \
    ros-${ROS_DISTRO}-ament-cmake \
    ros-${ROS_DISTRO}-xacro \
    ros-${ROS_DISTRO}-ur-msgs \
    ros-${ROS_DISTRO}-ur-client-library \
    ros-${ROS_DISTRO}-action-msgs \
    ros-${ROS_DISTRO}-ament-lint-common \
    ros-${ROS_DISTRO}-ament-cmake-gtest \
    ros-${ROS_DISTRO}-ament-cmake-gmock \
    && rm -rf /var/lib/apt/lists/*

# Initialize rosdep
RUN rosdep init && rosdep update

# #---------------------------------#

# ENV COLCON_WS=~/workspaces/ur_gz
# RUN mkdir -p $COLCON_WS/src


# # Set the working directory
# # WORKDIR $COLCON_WS

# # Download the required repositories
# RUN cd $COLCON_WS && \
#     git clone -b ros2 https://github.com/UniversalRobots/Universal_Robots_ROS2_Ignition_Simulation.git src/ur_simulation_gz && \
#     rosdep install --ignore-src --from-paths src -y 


# # # Import the repositories using vcs
# # RUN vcs import src --input src/Universal_Robots_ROS2_Gazebo_Simulation/Universal_Robots_ROS2_Gazebo_Simulation.${ROS_DISTRO}.repos

# # Source the setup.bash file
# RUN echo "source $COLCON_WS/install/setup.bash" >> ~/.bashrc

# # Source ROS 2 setup file and build the project
# RUN /bin/bash -c "cd ${COLCON_WS}/src && source /opt/ros/${ROS_DISTRO}/setup.bash && colcon build --symlink-install --mixin rel-with-deb-info compile-commands ccache"

# # # Verify if ur_simulation_gazebo is ready
# # RUN /bin/bash -c "source /root/workspaces/ur_gazebo/install/setup.bash && ros2 pkg list | grep ur_simulation_gazebo"

#---------------------------------#

# Copy the container_menu script into the container
COPY  container_menu.sh /root/container_menu.sh
RUN chmod +x /root/container_menu.sh


# Expose the necessary ports for Gazebo
EXPOSE 11345
EXPOSE 11311

# Luach into the terminal into /root directory
WORKDIR /root
CMD ["/bin/bash"]

# # Source ROS 2 setup file and workspace setup file, then run the launch file
# CMD /bin/bash -c "source /opt/ros/${ROS_DISTRO}/setup.bash && source /root/workspaces/ur_gazebo/install/setup.bash && ros2 launch ur_simulation_gazebo ur_sim_control.launch.py"